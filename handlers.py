import random
from aiogram import types
from asyncpg import Connection, Record
from asyncpg.exceptions import UniqueViolationError
from load_all import bot, dp, db

from keyboards import ListOfButtons


class DBCommands:

    pool: Connection = db
    ADD_NEW_USER_REFERRAL = "INSERT INTO users(chat_id, username, full_name, referral) " \
                            "VALUES ($1, $2, $3, $4) RETURNING id"
    ADD_NEW_USER = "INSERT INTO users(chat_id, username, full_name) VALUES ($1, $2, $3) RETURNING id"
    COUNT_USERS = "SELECT COUNT(*) FROM users"
    GET_ID = "SELECT id FROM users WHERE chat_id = $1"
    CHECK_REFERRALS = "SELECT chat_id FROM users WHERE referral=" \
                      "(SELECT id FROM users WHERE chat_id=$1)"
    CHECK_BALANCE = "SELECT balance FROM users WHERE chat_id = $1"
    ADD_MONEY = "UPDATE users SET balance=balance+$1 WHERE chat_id = $2"

    async def add_new_user(self, referral=None):
        user = types.User.get_current()

        chat_id = user.id
        username = user.username
        full_name = user.full_name
        args = chat_id, username, full_name

        if referral:
            args += (int(referral),)
            command = self.ADD_NEW_USER_REFERRAL
        else:
            command = self.ADD_NEW_USER

        try:
            record_id = await self.pool.fetchval(command, *args)
            return record_id
        except UniqueViolationError:
            pass

    async def count_users(self):
        record: Record = await self.pool.fetchval(self.COUNT_USERS)
        return record

    async def get_id(self):
        command = self.GET_ID
        user_id = types.User.get_current().id
        return await self.pool.fetchval(command, user_id)

    async def check_referrals(self):
        user_id = types.User.get_current().id
        command = self.CHECK_REFERRALS
        rows = await self.pool.fetch(command, user_id)
        return ", ".join([
            f"{num + 1}. " + (await bot.get_chat(user["chat_id"])).get_mention(as_html=True)
            for num, user in enumerate(rows)
        ])

    async def check_balance(self):
        command = self.CHECK_BALANCE
        user_id = types.User.get_current().id
        return await self.pool.fetchval(command, user_id)

    async def add_money(self, money):
        command = self.ADD_MONEY
        user_id = types.User.get_current().id
        return await self.pool.fetchval(command, money, user_id)


db = DBCommands()


@dp.message_handler(commands=["start"])
async def register_user(message: types.Message):
    chat_id = message.from_user.id
    referral = message.get_args()
    id = await db.add_new_user(referral=referral)
    count_users = await db.count_users()
    keyboard = ListOfButtons(
        text=["–°—Ç–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–º üíº", "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —á–ª–µ–Ω–∞ –ø–∞—Ä—Ç–∏–∏ üó£", "–í—Å–µ –æ –ø–∞—Ä—Ç–∏–∏ üåç", "–û–±—â–µ–Ω–∏–µ ‚òéÔ∏è", "–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è –°–°–°–† üá≤üá™"],
        align=[2, 2, 1]
    ).reply_keyboard
    text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∫–æ–º–º—É–Ω–∏—Å—Ç!"
    if not id:
        id = await db.get_id()
    else:
        text += "–ó–∞–ø–∏—Å–∞–ª –≤ –±–∞–∑—É! "

    bot_username = (await bot.me).username
    bot_link = f"https://t.me/{bot_username}?start={id}"
    balance = await db.check_balance()
    text += f"""

<b>–ú—ã –≤–∏–¥–∏–º, —á—Ç–æ —Ç—ã –∑–∞–±–ª—É–¥–∏–ª—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –ø–æ–∏—Å–∫–∞—Ö –Ω—É–∂–Ω–æ–≥–æ –ø—É—Ç–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ –ø—Ä–æ—Å—Ç–æ—Ä–∞–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞.</b> 

–¢–µ–±–µ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –ø–æ–≤–µ–∑–ª–æ! –ï—Å–ª–∏ —Ç—ã —á–∏—Ç–∞–µ—à—å –¥–∞–Ω–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ, —Ç–æ —É–∂–µ –º—ã—Å–ª–µ–Ω–Ω–æ –≤—Å—Ç—É–ø–∏–ª –≤ –ø–∞—Ä—Ç–∏—é –ö–æ–º–º—É–Ω–∞–ª–∫–∞ –°–°–°–†. 
–ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ –∑–∞ —Ç–æ–±–æ–π. –î–µ–π—Å—Ç–≤—É–π. –ß–µ–≥–æ –∂–µ —Ç—ã –∂–¥—ë—à—å?
<b>–ú—ã —Ä–∞–¥—ã —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–π –ø–∞—Ä—Ç–∏–∏.</b>

"""

    await bot.send_message(chat_id, text, reply_markup=keyboard)


@dp.message_handler(lambda message: "–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è –°–°–°–† üá≤üá™" == message.text)
async def btnl(message: types.Message):
    keyboard_markup = types.InlineKeyboardMarkup(row_width=3)
    keyboard_markup.add(
        types.InlineKeyboardButton('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞—Ä—Ç–∏–∏ üè∞', url='https://telegra.ph/Struktura-partii-11-11'),
    )
    text = f""
    text += f"""–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è –°–°–°–† üá≤üá™

<b>–í –∫–∞–∂–¥–æ–π –ø–∞—Ä—Ç–∏–∏ –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—è, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–π –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –Ω–∞–¥–∑–æ—Ä –∑–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ–º –Ω–∞–¥–ª–µ–∂–∞—â–∏—Ö –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π.</b>

–ö–∞–∂–¥—ã–π —á–ª–µ–Ω –ø–∞—Ä—Ç–∏–∏ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –≤ –Ω–∞—à–µ–π –∫–æ–º–º—É–Ω–µ. 

<b>–õ—é–±–æ–π —Ç—Ä—É–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø–ª–∞—á–µ–Ω, –≤ —Å–≤—è–∑–∏ —Å —ç—Ç–∏–º, –∫–∞–∂–¥–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å –±—É–¥–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –æ–¥–Ω–æ–ø–∞—Ä—Ç–∏–π—Ü–∞–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∏–≤–∏–¥–µ–Ω–¥—ã.</b>

–ó–∞ –ø–æ–∫—É–ø–∫–æ–π, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –õ–∞–≤—Ä–µ–Ω—Ç–∏—é –ü–∞–≤–ª–æ–≤–∏—á—É: @beriaCCCP
"""
    await message.answer(text, reply_markup=keyboard_markup)


@dp.message_handler(lambda message: "–û–±—â–µ–Ω–∏–µ ‚òéÔ∏è" == message.text)
async def btnl(message: types.Message):
    keyboard_markup = types.InlineKeyboardMarkup(row_width=3)
    keyboard_markup.add(
        types.InlineKeyboardButton('–ù–∞—à —á–∞—Ç üé¨', url='t.me/communistchat'),
    )
    keyboard_markup.add(
        types.InlineKeyboardButton('–ì–ª–∞–≤–∞ –ø–∞—Ä—Ç–∏–∏ üß†', url='t.me/GeneralStalinBot'),
    )
    text = f""
    text += f"""

–û–±—â–µ–Ω–∏–µ ‚òé

–õ–µ–≥–∫–æ –∏ –ø—Ä–æ—Å—Ç–æ –≤—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –Ω–∞ —Å–≤—è–∑–∏ —Å–æ —Å–≤–æ–∏–º–∏ –æ–¥–Ω–æ–ø–∞—Ä—Ç–∏–π—Ü–∞–º–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Ç –≥–ª–∞–≤—ã –ø–∞—Ä—Ç–∏–∏. 

<b>–í–Ω–∏–∑—É —Ä–∞–∑–º–µ—â–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ –Ω–∞ –Ω–∞—à —á–∞—Ç –∏ –ì–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–≥–æ —Å–µ–∫—Ä–µ—Ç–∞—Ä—è –¶–ö –ö–ü–°–°</b>

<b>–ß–µ—Å—Ç–Ω—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à :</b>

–î–æ—Ä–æ–≥–∏–µ —Ç–æ–≤–∞—Ä–∏—â–∏! 
–ö–∞–∂–¥—ã–π —á–ª–µ–Ω –ø–∞—Ä—Ç–∏–∏ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–∞–ª–æ–Ω –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –ø–∞—Ä—Ç–∏–π–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–µ ( –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É : –æ–¥–∏–Ω —Ç–∞–ª–æ–Ω –≤ –æ–¥–Ω–∏ —Ä—É–∫–∏ ).

–í –∫–æ–Ω—Ü–µ —Ä–∞–±–æ—á–µ–π –Ω–µ–¥–µ–ª–∏, –∫–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É –≤ 18:00 –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ª–æ—Ç–µ—Ä–µ—è –Ω–∞ —Å–ª—É—á–∞–π–Ω—É—é —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç —Ä–∞–∑—ã–≥—Ä—ã–≤–∞—Ç—å –≥–ª–∞–≤–∞ –ø–∞—Ä—Ç–∏–∏. 
–ü–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ –æ–¥–∏–Ω, —Ç–∞–∫ –∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. 

<b>–ë–ª–∏–∂–∞–π—à–∏–µ –∫–æ–Ω–∫—É—Ä—Å—ã –≤ –Ω–∞—à–µ–º —á–∞—Ç–µ:</b>
–ó–∞–≥–∞–¥–∫–∏ –≤ —á–∞—Ç–µ. –ì–ª–∞–≤–Ω—ã–π –ø—Ä–∏–∑ - 1500 RUB –î–∞—Ç–∞ 15.11.2019

–í—Å–µ–º –∂–µ–ª–∞–µ–º —É–¥–∞—á–∏, —á–µ—Å—Ç–Ω—ã—Ö –ø–æ–±–µ–¥ –∏ –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –≤—Ä–µ–º—è–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è.
"""
    await message.answer(text, reply_markup=keyboard_markup)


@dp.message_handler(lambda message: "–í—Å–µ –æ –ø–∞—Ä—Ç–∏–∏ üåç" == message.text)
async def btnl (message: types.Message):

    text = f""
    text += f"""
   –í—Å–µ –æ –ø–∞—Ä—Ç–∏–∏ üåç

<b>–ü—Ä–æ—Å—Ç–µ–π—à–∏–π —Ñ–∞–∫—Ç: –ö–æ–º–º—É–Ω–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ª–∏–¥–µ—Ä—ã –æ—á–µ–Ω—å –±–æ–≥–∞—Ç—ã.</b>

<i>–î–∞, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –¥–µ–∫–ª–∞—Ä–∏—Ä—É–µ–º–æ–µ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏ –∏ –ø–æ–∫–∞–∑—É—à–Ω—É—é —Å–∫—Ä–æ–º–Ω–æ—Å—Ç—å, –ª–∏–¥–µ—Ä—ã –∫–æ–º–º—É–Ω–∏—Å—Ç–æ–≤ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∂–∏–ª–∏ —Ç–∞–∫ –∂–µ, –∫–∞–∫ –Ω–∞—Ä–æ–¥.
–ú—ã, –æ—Ç –ª–∏—Ü–∞ –¥–∞–Ω–Ω–æ–π –ø–∞—Ä—Ç–∏–∏ —Ö–æ—Ç–∏–º, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –∏–∑ –í–∞—Å –Ω–µ –æ—Ç–∫–∞–∑—ã–≤–∞–ª —Å–µ–±–µ –≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è—Ö. </i> 

<b>–ü–æ—á–µ–º—É –∫–æ–º–º—É–Ω–∏—Å—Ç—ã —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ —É—Ö–æ–¥—è—Ç —Å–æ —Å—Ü–µ–Ω—ã?</b>

<i>–û—Ç–≤–µ—á–∞–µ–º: –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ–º –¥–æ–ª–≥–æ–µ –≤—Ä–µ–º—è. –í–µ–¥—å –∫–æ–≥–¥–∞-—Ç–æ –¥–æ–ª–∂–Ω–æ –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è, –∏—Å—á–µ—Ä–ø–∞—Ç—å—Å—è —Ç–æ, —á—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∏—Ç—å –∏ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—å, –Ω–∏—á–µ–≥–æ –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ —Å–æ–∑–¥–∞–≤–∞—è.

–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç</i> <b>–ö–æ–º–º—É–Ω–∞–ª–∫–∞ –°–°–°–†</b> <i>–ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∫–∞–∂–¥–æ–º—É –∑–∞–¥–µ—Ä–∂–∞—Ç—å—Å—è –Ω–∞ —Å—Ü–µ–Ω–µ, –æ–∫–∞–∑–∞—Ç—å—Å—è –ª–∏–¥–µ—Ä–æ–º, –Ω–∞—á–∞—Ç—å 
–º—ã—Å–ª–∏—Ç—å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ, –∞ —Ç–∞–∫ –∂–µ, —Å–æ–∑–¥–∞—Ç—å –¥–æ—Å—Ç–æ–π–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–≤–æ–∏—Ö –∂–µ–ª–∞–Ω–∏–π.</i>

<b>–ì–ª–∞–≤–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –ø–æ–∂–∞–ª—É–π, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –∫–∞–∂–¥–æ–≥–æ —á–ª–µ–Ω–∞ –ø–∞—Ä—Ç–∏–∏. –û—Ç–∫—É–¥–∞ –∂–µ –±–µ—Ä—É—Ç—Å—è —Ñ–∏–Ω–∞–Ω—Å—ã, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–∞—Ä—Ç–∏—è?</b>

<i>–¢–∞–∫ –∫–∞–∫ –≤ –Ω–∞—à–µ–º —É—Å—Ç–∞–≤–µ –ø–∞—Ä—Ç–∏–∏ –ø—Ä–æ–ø–∏—Å–∞–Ω–æ, —á—Ç–æ –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Ö–æ–¥–∞—Ö —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π, –º—ã –Ω–µ –±—É–¥–µ–º —Ä–∞—Å–∫—Ä—ã–≤–∞—Ç—å –≤–µ—Å—å —Å–º—ã—Å–ª –∑–∞—Ä–∞–±–æ—Ç–∫–∞. 
–û–¥–Ω–∞–∫–æ —á—Ç–æ-—Ç–æ –º—ã –æ—Ç –í–∞—Å –Ω–µ —É—Ç–æ–∏–º.</i> 

<b>–ö–æ–º–º—É–Ω–∞–ª–∫–∞ –°–°–°–†</b> –≤—ã—è–≤–ª—è–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã , —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å –æ–±–æ—Ä–æ—Ç –ù–∞—à–µ–π –∫–æ–º–º—É–Ω—ã. 
–í—ã —Å–º–µ–ª–æ –º–æ–∂–µ—Ç–µ –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω—ã –≤ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–º –¥–Ω–µ. –û–¥–Ω–∞ –∏–∑ –≥–ª–∞–≤–Ω—ã—Ö –∑–∞–ø–æ–≤–µ–¥–µ–π –ø–∞—Ä—Ç–∏–∏ –≥–ª–∞—Å–∏—Ç 

<b>¬´–ö–æ–ª–ª–µ–∫—Ç–∏–≤–∏–∑–º –∏ —Ç–æ–≤–∞—Ä–∏—â–µ—Å–∫–∞—è –ø–æ–º–æ—â—å –ø—Ä–µ–≤—ã—à–µ –≤—Å–µ–≥–æ, –æ–¥–∏–Ω –∑–∞ –≤—Å–µ—Ö, –≤—Å–µ –∑–∞ –æ–¥–Ω–æ–≥–æ!¬ª</b>

"""
    await message.answer(text)


@dp.message_handler(lambda message: "–°—Ç–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–º üíº" == message.text)
async def btnl ( message:types.Message):

    keyboard_markup = types.InlineKeyboardMarkup(row_width=3)
    keyboard_markup.add(
        types.InlineKeyboardButton('–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ QIWI', url='https://qiwi.com/payment/form/99?currency=RUB&extra[%27account%27]=+77056975701&extra[%27comment%27]='),
    )
    text = f""
    uid = types.User.get_current().id
    text += f"""
–°—Ç–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–º üíº

<b>–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–∏, –ø–æ–¥–æ–≥—Ä–µ–≤–∞–µ–º—ã–µ —Å–≤–æ–µ–π –∂–∞–¥–Ω–æ—Å—Ç—å—é, –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ –ø–µ—Ä–µ–æ—Ü–µ–Ω–∏–≤–∞–ª–∏ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ –ø—Ä–æ—Ü–µ—Å—Å.</b> 

–ù—É–∂–Ω–æ —á—ë—Ç–∫–æ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ –Ω–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ, –ø–æ–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã—Ö –±–ª–∞–≥ –Ω–µ –±—É–¥–µ—Ç –≤ –ø–æ–ª–Ω–æ–º –¥–æ—Å—Ç–∞—Ç–∫–µ, –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –≤–≤–∏–¥–µ –ø—Ä–∏–±—ã–ª–∏ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π. 
–°—Ç–∞–≤ —á–∞—Å—Ç—å—é –ö–æ–º–º—É–Ω–∞–ª–∫–∏ –°–°–°–†, —É–¥–µ–ª–∏–≤ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —É—Å–∏–ª–∏—è. 

<b>–í—ã —Å–º–æ–∂–µ—Ç–µ –∏–º–µ—Ç—å 20% –¥–æ—Ö–æ–¥–∞ –≤–≤–∏–¥–µ –¥–∏–≤–∏–¥–µ–Ω–¥–æ–≤, –≤–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é —Å–≤–æ–∏—Ö –∂–µ–ª–∞–Ω–∏–π.</b> 

<b>QIWI –ö–æ—à–µ–ª—ë–∫ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:</b> +77056975701

<b>–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—ã –º–æ–∂–µ—Ç–µ, –æ—Å—É—â–µ—Å—Ç–≤–∏–≤ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –Ω–∞—à QIWI –∫–æ—à–µ–ª—ë–∫, —É–∫–∞–∑–∞–≤ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è 
–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–∞—à–µ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:</b>  {uid} 

–¢–∞–∫ –∫–∞–∫ –ø—Ä–∏–±—ã–ª—å –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–∞ –í–∞–º–∏ —Å—Ä–∞–∑—É, —Ç–æ –ø–æ–ª–Ω–æ–µ –ø—Ä–∞–≤–æ –Ω–∞ –µ—ë —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–µ –æ—Å—Ç–∞—ë—Ç—Å—è –∑–∞ –í–∞–º–∏. –û—Å–Ω–æ–≤–Ω–æ–π –≤–∫–ª–∞–¥ —è–≤–∏—Ç—Å—è –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 5 —Å—É—Ç–æ–∫. 

<i>–í–∞—à –¥–µ–ø–æ–∑–∏—Ç, –±–µ–∑ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ - –Ω–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è!</i>

<b>–°–≤–æ—ë –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –∫–æ–ø–∏–ª–∫—É –ø–∞—Ä—Ç–∏–∏ –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–¥–∏—Ç—å –∑–¥–µ—Å—å: @ussrpay</b>

<b>–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.</b>
    """
    await bot.send_message(uid, text, reply_markup=keyboard_markup)


@dp.message_handler(lambda message: "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —á–ª–µ–Ω–∞ –ø–∞—Ä—Ç–∏–∏ üó£" == message.text)
async def btnl(message: types.Message):
    chat_id = message.from_user.id
    referral = message.get_args()
    id = await db.add_new_user(referral=referral)
    text = "–í—Å–µ–º –¥–æ–±—Ä–æ–≥–æ –¥–Ω—è!"
    if not id:
        id = await db.get_id()
    else:
        text += "–ó–∞–ø–∏—Å–∞–ª –≤ –±–∞–∑—É! "

    bot_username = (await bot.me).username
    bot_link = f"https://t.me/{bot_username}?start={id}"
    text = ""
    text += f"""–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —á–ª–µ–Ω–∞ –ø–∞—Ä—Ç–∏–∏ üó£

<b>–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–∏ —Å—Ç–∞—Ä–∞–Ω–∏—è. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –°–æ–±–æ–π –∏ —Å—Ç–∞—Ä–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å –í–∞—Å –±–æ–ª–µ–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º.</b> 

–£–≤–µ–ª–∏—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ –±–ª–∞–≥–∞ –º–æ–∂–Ω–æ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ: –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ –í–∞–º–∏ –Ω–æ–≤–æ–≥–æ —á–ª–µ–Ω–∞ –ø–∞—Ä—Ç–∏–∏ –±—É–¥–µ—Ç –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ, –≤–≤–∏–¥–µ 5% –æ—Ç –µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. 

<b>–ü–∞—Ä—Ç–∏–π–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è —Å—Ç—Ä–æ–≥–æ –≤–æ –≤—Ç–æ—Ä–Ω–∏–∫ –∫–∞–∂–¥—ã–µ –¥–≤–µ –Ω–µ–¥–µ–ª–∏ —Å 16:00-21:00.</b>

–í–∞—à–∞ –ø–∞—Ä—Ç–∏–π–Ω–∞—è —Å—Å—ã–ª–∫–∞: {bot_link}
–ü—Ä–∏ –ª—é–±—ã—Ö —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –≥–ª–∞–≤–µ –ø–∞—Ä—Ç–∏–∏: @GeneralStalinBot
  
<b>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ:</b> /communal
    """""
    await bot.send_message(chat_id, text)


@dp.message_handler(commands=["communal"])
async def check_referrals(message: types.Message):
    referrals = await db.check_referrals()
    text = f"–í–∞—à–∏ –æ–¥–Ω–æ–ø–∞—Ä—Ç–∏–π—Ü—ã:\n{referrals}"
    await message.answer(text)


@dp.message_handler(commands=["add_money"])
async def add_money(message: types.Message):
    random_amount = random.randint(1, 100)
    await db.add_money(random_amount)
    balance = await db.check_balance()

    text = f"""
–í–∞–º –±—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ {random_amount} –º–æ–Ω–µ—Ç.
–¢–µ–ø–µ—Ä—å –≤–∞—à –±–∞–ª–∞–Ω—Å: {balance}
    """
    await message.answer(text)


@dp.message_handler()
async def keyboards(message: types.Message):
    text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∫–æ–º–º—É–Ω–∏—Å—Ç!"
    keyboard = ListOfButtons(
           text=["–°—Ç–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–º üíº", "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —á–ª–µ–Ω–∞ –ø–∞—Ä—Ç–∏–∏ üó£", "–í—Å–µ –æ –ø–∞—Ä—Ç–∏–∏ üåç", "–û–±—â–µ–Ω–∏–µ ‚òéÔ∏è", "–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è –°–°–°–† üá≤üá™"],
           align=[2, 2, 1]
    ).reply_keyboard
    await message.answer(text=text, reply_markup=keyboard)

